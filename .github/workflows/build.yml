name: CI and Publish

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} (${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            arch: x86_64
          - os: ubuntu-latest
            arch: aarch64
          - os: windows-latest
            arch: AMD64
          - os: macos-14
            arch: universal2

    steps:
      - uses: actions/checkout@v3
      
      - name: Enable QEMU
        if: matrix.os == 'ubuntu-latest' && matrix.arch == 'aarch64'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
      
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      
      - run: python -m pip install --upgrade cibuildwheel build
      
      - name: Build wheels
        env:
          CIBW_BUILD: "cp38-* cp39-* cp31?-*"
          CIBW_ARCHS_LINUX: ${{ matrix.arch }}
          CIBW_ARCHS_WINDOWS: ${{ matrix.arch }}
          CIBW_ARCHS_MACOS: universal2
          CIBW_TEST_COMMAND: "python -c \"import pywaves_curve25519\""
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux_2_28
          CIBW_ENVIRONMENT: "GITHUB_REF=${{ github.ref }}"
        run: python -m cibuildwheel --output-dir wheelhouse
      
      - name: Build sdist
        if: matrix.os == 'ubuntu-latest' && matrix.arch == 'x86_64'
        run: python -m build --sdist -o dist
      
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.arch }}
          path: wheelhouse/*.whl
          if-no-files-found: error
          
      - uses: actions/upload-artifact@v4
        if: matrix.os == 'ubuntu-latest' && matrix.arch == 'x86_64'
        with:
          name: sdist
          path: dist/*.tar.gz
          if-no-files-found: error

  publish:
    name: Publish to PyPI
    needs: [build_wheels]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      id-token: write
      contents: read
    
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: "*"
          merge-multiple: true
          path: dist
      
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          skip-existing: true
          verify-metadata: true 